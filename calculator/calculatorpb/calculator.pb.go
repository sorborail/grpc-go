// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator.proto

package calculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Values struct {
	FirstValue           int32    `protobuf:"varint,1,opt,name=first_value,json=firstValue,proto3" json:"first_value,omitempty"`
	SecondValue          int32    `protobuf:"varint,2,opt,name=second_value,json=secondValue,proto3" json:"second_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Values) Reset()         { *m = Values{} }
func (m *Values) String() string { return proto.CompactTextString(m) }
func (*Values) ProtoMessage()    {}
func (*Values) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{0}
}

func (m *Values) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Values.Unmarshal(m, b)
}
func (m *Values) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Values.Marshal(b, m, deterministic)
}
func (m *Values) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Values.Merge(m, src)
}
func (m *Values) XXX_Size() int {
	return xxx_messageInfo_Values.Size(m)
}
func (m *Values) XXX_DiscardUnknown() {
	xxx_messageInfo_Values.DiscardUnknown(m)
}

var xxx_messageInfo_Values proto.InternalMessageInfo

func (m *Values) GetFirstValue() int32 {
	if m != nil {
		return m.FirstValue
	}
	return 0
}

func (m *Values) GetSecondValue() int32 {
	if m != nil {
		return m.SecondValue
	}
	return 0
}

type SumRequest struct {
	Values               *Values  `protobuf:"bytes,1,opt,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{1}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetValues() *Values {
	if m != nil {
		return m.Values
	}
	return nil
}

type SumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{2}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type NumberDecompositionRequest struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumberDecompositionRequest) Reset()         { *m = NumberDecompositionRequest{} }
func (m *NumberDecompositionRequest) String() string { return proto.CompactTextString(m) }
func (*NumberDecompositionRequest) ProtoMessage()    {}
func (*NumberDecompositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{3}
}

func (m *NumberDecompositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberDecompositionRequest.Unmarshal(m, b)
}
func (m *NumberDecompositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberDecompositionRequest.Marshal(b, m, deterministic)
}
func (m *NumberDecompositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberDecompositionRequest.Merge(m, src)
}
func (m *NumberDecompositionRequest) XXX_Size() int {
	return xxx_messageInfo_NumberDecompositionRequest.Size(m)
}
func (m *NumberDecompositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberDecompositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NumberDecompositionRequest proto.InternalMessageInfo

func (m *NumberDecompositionRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type NumberDecompositionResponse struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumberDecompositionResponse) Reset()         { *m = NumberDecompositionResponse{} }
func (m *NumberDecompositionResponse) String() string { return proto.CompactTextString(m) }
func (*NumberDecompositionResponse) ProtoMessage()    {}
func (*NumberDecompositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{4}
}

func (m *NumberDecompositionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberDecompositionResponse.Unmarshal(m, b)
}
func (m *NumberDecompositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberDecompositionResponse.Marshal(b, m, deterministic)
}
func (m *NumberDecompositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberDecompositionResponse.Merge(m, src)
}
func (m *NumberDecompositionResponse) XXX_Size() int {
	return xxx_messageInfo_NumberDecompositionResponse.Size(m)
}
func (m *NumberDecompositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberDecompositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NumberDecompositionResponse proto.InternalMessageInfo

func (m *NumberDecompositionResponse) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type AverageCalcRequest struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageCalcRequest) Reset()         { *m = AverageCalcRequest{} }
func (m *AverageCalcRequest) String() string { return proto.CompactTextString(m) }
func (*AverageCalcRequest) ProtoMessage()    {}
func (*AverageCalcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{5}
}

func (m *AverageCalcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageCalcRequest.Unmarshal(m, b)
}
func (m *AverageCalcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageCalcRequest.Marshal(b, m, deterministic)
}
func (m *AverageCalcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageCalcRequest.Merge(m, src)
}
func (m *AverageCalcRequest) XXX_Size() int {
	return xxx_messageInfo_AverageCalcRequest.Size(m)
}
func (m *AverageCalcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageCalcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AverageCalcRequest proto.InternalMessageInfo

func (m *AverageCalcRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type AverageCalcResponse struct {
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageCalcResponse) Reset()         { *m = AverageCalcResponse{} }
func (m *AverageCalcResponse) String() string { return proto.CompactTextString(m) }
func (*AverageCalcResponse) ProtoMessage()    {}
func (*AverageCalcResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{6}
}

func (m *AverageCalcResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageCalcResponse.Unmarshal(m, b)
}
func (m *AverageCalcResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageCalcResponse.Marshal(b, m, deterministic)
}
func (m *AverageCalcResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageCalcResponse.Merge(m, src)
}
func (m *AverageCalcResponse) XXX_Size() int {
	return xxx_messageInfo_AverageCalcResponse.Size(m)
}
func (m *AverageCalcResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageCalcResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AverageCalcResponse proto.InternalMessageInfo

func (m *AverageCalcResponse) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type NumberEveryoneRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumberEveryoneRequest) Reset()         { *m = NumberEveryoneRequest{} }
func (m *NumberEveryoneRequest) String() string { return proto.CompactTextString(m) }
func (*NumberEveryoneRequest) ProtoMessage()    {}
func (*NumberEveryoneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{7}
}

func (m *NumberEveryoneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberEveryoneRequest.Unmarshal(m, b)
}
func (m *NumberEveryoneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberEveryoneRequest.Marshal(b, m, deterministic)
}
func (m *NumberEveryoneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberEveryoneRequest.Merge(m, src)
}
func (m *NumberEveryoneRequest) XXX_Size() int {
	return xxx_messageInfo_NumberEveryoneRequest.Size(m)
}
func (m *NumberEveryoneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberEveryoneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NumberEveryoneRequest proto.InternalMessageInfo

func (m *NumberEveryoneRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type NumberEveryoneResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumberEveryoneResponse) Reset()         { *m = NumberEveryoneResponse{} }
func (m *NumberEveryoneResponse) String() string { return proto.CompactTextString(m) }
func (*NumberEveryoneResponse) ProtoMessage()    {}
func (*NumberEveryoneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{8}
}

func (m *NumberEveryoneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberEveryoneResponse.Unmarshal(m, b)
}
func (m *NumberEveryoneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberEveryoneResponse.Marshal(b, m, deterministic)
}
func (m *NumberEveryoneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberEveryoneResponse.Merge(m, src)
}
func (m *NumberEveryoneResponse) XXX_Size() int {
	return xxx_messageInfo_NumberEveryoneResponse.Size(m)
}
func (m *NumberEveryoneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberEveryoneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NumberEveryoneResponse proto.InternalMessageInfo

func (m *NumberEveryoneResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type SquareRootRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootRequest) Reset()         { *m = SquareRootRequest{} }
func (m *SquareRootRequest) String() string { return proto.CompactTextString(m) }
func (*SquareRootRequest) ProtoMessage()    {}
func (*SquareRootRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{9}
}

func (m *SquareRootRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootRequest.Unmarshal(m, b)
}
func (m *SquareRootRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootRequest.Marshal(b, m, deterministic)
}
func (m *SquareRootRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootRequest.Merge(m, src)
}
func (m *SquareRootRequest) XXX_Size() int {
	return xxx_messageInfo_SquareRootRequest.Size(m)
}
func (m *SquareRootRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootRequest proto.InternalMessageInfo

func (m *SquareRootRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type SquareRootResponse struct {
	NumberRoot           float64  `protobuf:"fixed64,1,opt,name=number_root,json=numberRoot,proto3" json:"number_root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootResponse) Reset()         { *m = SquareRootResponse{} }
func (m *SquareRootResponse) String() string { return proto.CompactTextString(m) }
func (*SquareRootResponse) ProtoMessage()    {}
func (*SquareRootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{10}
}

func (m *SquareRootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootResponse.Unmarshal(m, b)
}
func (m *SquareRootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootResponse.Marshal(b, m, deterministic)
}
func (m *SquareRootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootResponse.Merge(m, src)
}
func (m *SquareRootResponse) XXX_Size() int {
	return xxx_messageInfo_SquareRootResponse.Size(m)
}
func (m *SquareRootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootResponse proto.InternalMessageInfo

func (m *SquareRootResponse) GetNumberRoot() float64 {
	if m != nil {
		return m.NumberRoot
	}
	return 0
}

func init() {
	proto.RegisterType((*Values)(nil), "calculator.Values")
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*NumberDecompositionRequest)(nil), "calculator.NumberDecompositionRequest")
	proto.RegisterType((*NumberDecompositionResponse)(nil), "calculator.NumberDecompositionResponse")
	proto.RegisterType((*AverageCalcRequest)(nil), "calculator.AverageCalcRequest")
	proto.RegisterType((*AverageCalcResponse)(nil), "calculator.AverageCalcResponse")
	proto.RegisterType((*NumberEveryoneRequest)(nil), "calculator.NumberEveryoneRequest")
	proto.RegisterType((*NumberEveryoneResponse)(nil), "calculator.NumberEveryoneResponse")
	proto.RegisterType((*SquareRootRequest)(nil), "calculator.SquareRootRequest")
	proto.RegisterType((*SquareRootResponse)(nil), "calculator.SquareRootResponse")
}

func init() { proto.RegisterFile("calculator.proto", fileDescriptor_c686ea360062a8cf) }

var fileDescriptor_c686ea360062a8cf = []byte{
	// 415 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0x41, 0xab, 0xd3, 0x40,
	0x10, 0xc7, 0x8d, 0xf2, 0x02, 0x4e, 0x1e, 0x0f, 0x3b, 0x6a, 0x94, 0xa8, 0xad, 0x5d, 0x50, 0x4b,
	0x0b, 0xb5, 0xb4, 0x08, 0x9e, 0x04, 0xad, 0xde, 0xd4, 0x43, 0x0a, 0x1e, 0x04, 0x29, 0x69, 0x1c,
	0x25, 0x90, 0x66, 0xd3, 0xdd, 0x4d, 0xc0, 0xaf, 0xe8, 0xa7, 0x7a, 0x74, 0x37, 0xdb, 0xa4, 0x6d,
	0xda, 0x1e, 0x67, 0xe6, 0x37, 0xff, 0x99, 0xec, 0x7f, 0x08, 0x3c, 0x88, 0xa3, 0x34, 0x2e, 0xd2,
	0x48, 0x71, 0x31, 0xce, 0x05, 0x57, 0x1c, 0xa1, 0xce, 0xb0, 0xaf, 0xe0, 0xfe, 0x88, 0xd2, 0x82,
	0x24, 0xf6, 0xc0, 0xfb, 0x93, 0x08, 0xa9, 0x96, 0xe5, 0x36, 0x7e, 0xea, 0xbc, 0x74, 0x06, 0x57,
	0x21, 0xe8, 0x94, 0x26, 0xb0, 0x0f, 0xd7, 0x92, 0x62, 0x9e, 0xfd, 0xae, 0x88, 0xbb, 0x9a, 0xf0,
	0x4c, 0x4e, 0x23, 0xec, 0x3d, 0xc0, 0xa2, 0x58, 0x87, 0xb4, 0x29, 0x48, 0x2a, 0x1c, 0x82, 0xab,
	0x49, 0xa9, 0xc5, 0xbc, 0x29, 0x8e, 0x1b, 0xab, 0x98, 0xa9, 0x61, 0x45, 0xb0, 0x57, 0xe0, 0xe9,
	0x4e, 0x99, 0xf3, 0x4c, 0x12, 0xfa, 0xe0, 0x0a, 0x92, 0x45, 0xaa, 0xaa, 0x3d, 0xaa, 0x88, 0x4d,
	0x21, 0xf8, 0x5e, 0xac, 0x57, 0x24, 0x3e, 0x53, 0xcc, 0xd7, 0x39, 0x97, 0x89, 0x4a, 0x78, 0x66,
	0x07, 0x3e, 0x82, 0xab, 0xe6, 0xf2, 0x26, 0x60, 0x33, 0x78, 0xd6, 0xda, 0x53, 0x8d, 0x6a, 0x6f,
	0x1a, 0x02, 0x7e, 0x2c, 0x49, 0x44, 0x7f, 0x69, 0x1e, 0xa5, 0xf1, 0xf9, 0x01, 0x23, 0x78, 0xb8,
	0xc7, 0xb6, 0x09, 0x3b, 0x16, 0x7e, 0x0b, 0x8f, 0xcd, 0x36, 0x5f, 0x4a, 0x12, 0xff, 0x78, 0x46,
	0x56, 0xdb, 0x07, 0x37, 0xd3, 0x05, 0xfb, 0xc9, 0x26, 0x62, 0x13, 0xf0, 0x0f, 0x1b, 0x2e, 0x3c,
	0xd2, 0x08, 0x3a, 0x8b, 0x4d, 0x11, 0x09, 0x0a, 0x39, 0x57, 0x97, 0xe4, 0xdf, 0x01, 0x36, 0xe1,
	0x4a, 0xba, 0x07, 0x9e, 0xa9, 0x2f, 0x05, 0xe7, 0xaa, 0xfa, 0x02, 0x30, 0xa9, 0x2d, 0x38, 0xfd,
	0x7f, 0x0f, 0x3a, 0xf3, 0x9d, 0x9b, 0x0b, 0x12, 0x65, 0x12, 0x13, 0x7e, 0x80, 0xfb, 0x36, 0x49,
	0xe8, 0x37, 0xed, 0xae, 0xcf, 0x22, 0x78, 0x72, 0x94, 0x37, 0x43, 0xd9, 0x1d, 0x94, 0xf0, 0x7c,
	0xd7, 0xdf, 0xe2, 0x19, 0xbe, 0x6e, 0xb6, 0x9e, 0x3e, 0x84, 0xe0, 0xcd, 0x45, 0xce, 0x8e, 0x9c,
	0x38, 0x18, 0x82, 0xd7, 0xb0, 0x0f, 0xbb, 0xcd, 0xde, 0xe3, 0x1b, 0x08, 0x7a, 0x27, 0xeb, 0x56,
	0x73, 0xe0, 0xe0, 0x2f, 0xb8, 0xd9, 0x37, 0x0d, 0xfb, 0xc7, 0x2b, 0x1d, 0x5c, 0x40, 0xc0, 0xce,
	0x21, 0xb5, 0xf8, 0xc4, 0xc1, 0x6f, 0x00, 0xb5, 0x69, 0xf8, 0x62, 0xef, 0x41, 0x0f, 0x9d, 0x0f,
	0xba, 0xa7, 0xca, 0x56, 0xf2, 0xd3, 0xcd, 0xcf, 0xeb, 0x1a, 0xc9, 0x57, 0x2b, 0x57, 0xff, 0x27,
	0x66, 0xb7, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5d, 0x02, 0x14, 0xc5, 0x3b, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	// Unary
	Calculate(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	// Server stream
	CalculateNumberDecomposition(ctx context.Context, in *NumberDecompositionRequest, opts ...grpc.CallOption) (CalculatorService_CalculateNumberDecompositionClient, error)
	// Client stream
	AverageCalc(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_AverageCalcClient, error)
	// BiDi Streaming
	NumberEveryone(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_NumberEveryoneClient, error)
	SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error)
}

type calculatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorServiceClient(cc *grpc.ClientConn) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) Calculate(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/Calculate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) CalculateNumberDecomposition(ctx context.Context, in *NumberDecompositionRequest, opts ...grpc.CallOption) (CalculatorService_CalculateNumberDecompositionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[0], "/calculator.CalculatorService/CalculateNumberDecomposition", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceCalculateNumberDecompositionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculatorService_CalculateNumberDecompositionClient interface {
	Recv() (*NumberDecompositionResponse, error)
	grpc.ClientStream
}

type calculatorServiceCalculateNumberDecompositionClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceCalculateNumberDecompositionClient) Recv() (*NumberDecompositionResponse, error) {
	m := new(NumberDecompositionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) AverageCalc(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_AverageCalcClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[1], "/calculator.CalculatorService/AverageCalc", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceAverageCalcClient{stream}
	return x, nil
}

type CalculatorService_AverageCalcClient interface {
	Send(*AverageCalcRequest) error
	CloseAndRecv() (*AverageCalcResponse, error)
	grpc.ClientStream
}

type calculatorServiceAverageCalcClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceAverageCalcClient) Send(m *AverageCalcRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceAverageCalcClient) CloseAndRecv() (*AverageCalcResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AverageCalcResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) NumberEveryone(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_NumberEveryoneClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[2], "/calculator.CalculatorService/NumberEveryone", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceNumberEveryoneClient{stream}
	return x, nil
}

type CalculatorService_NumberEveryoneClient interface {
	Send(*NumberEveryoneRequest) error
	Recv() (*NumberEveryoneResponse, error)
	grpc.ClientStream
}

type calculatorServiceNumberEveryoneClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceNumberEveryoneClient) Send(m *NumberEveryoneRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceNumberEveryoneClient) Recv() (*NumberEveryoneResponse, error) {
	m := new(NumberEveryoneResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error) {
	out := new(SquareRootResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/SquareRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	// Unary
	Calculate(context.Context, *SumRequest) (*SumResponse, error)
	// Server stream
	CalculateNumberDecomposition(*NumberDecompositionRequest, CalculatorService_CalculateNumberDecompositionServer) error
	// Client stream
	AverageCalc(CalculatorService_AverageCalcServer) error
	// BiDi Streaming
	NumberEveryone(CalculatorService_NumberEveryoneServer) error
	SquareRoot(context.Context, *SquareRootRequest) (*SquareRootResponse, error)
}

// UnimplementedCalculatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServiceServer struct {
}

func (*UnimplementedCalculatorServiceServer) Calculate(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calculate not implemented")
}
func (*UnimplementedCalculatorServiceServer) CalculateNumberDecomposition(req *NumberDecompositionRequest, srv CalculatorService_CalculateNumberDecompositionServer) error {
	return status.Errorf(codes.Unimplemented, "method CalculateNumberDecomposition not implemented")
}
func (*UnimplementedCalculatorServiceServer) AverageCalc(srv CalculatorService_AverageCalcServer) error {
	return status.Errorf(codes.Unimplemented, "method AverageCalc not implemented")
}
func (*UnimplementedCalculatorServiceServer) NumberEveryone(srv CalculatorService_NumberEveryoneServer) error {
	return status.Errorf(codes.Unimplemented, "method NumberEveryone not implemented")
}
func (*UnimplementedCalculatorServiceServer) SquareRoot(ctx context.Context, req *SquareRootRequest) (*SquareRootResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SquareRoot not implemented")
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_Calculate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Calculate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/Calculate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Calculate(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_CalculateNumberDecomposition_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NumberDecompositionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServiceServer).CalculateNumberDecomposition(m, &calculatorServiceCalculateNumberDecompositionServer{stream})
}

type CalculatorService_CalculateNumberDecompositionServer interface {
	Send(*NumberDecompositionResponse) error
	grpc.ServerStream
}

type calculatorServiceCalculateNumberDecompositionServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceCalculateNumberDecompositionServer) Send(m *NumberDecompositionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CalculatorService_AverageCalc_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).AverageCalc(&calculatorServiceAverageCalcServer{stream})
}

type CalculatorService_AverageCalcServer interface {
	SendAndClose(*AverageCalcResponse) error
	Recv() (*AverageCalcRequest, error)
	grpc.ServerStream
}

type calculatorServiceAverageCalcServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceAverageCalcServer) SendAndClose(m *AverageCalcResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceAverageCalcServer) Recv() (*AverageCalcRequest, error) {
	m := new(AverageCalcRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalculatorService_NumberEveryone_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).NumberEveryone(&calculatorServiceNumberEveryoneServer{stream})
}

type CalculatorService_NumberEveryoneServer interface {
	Send(*NumberEveryoneResponse) error
	Recv() (*NumberEveryoneRequest, error)
	grpc.ServerStream
}

type calculatorServiceNumberEveryoneServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceNumberEveryoneServer) Send(m *NumberEveryoneResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceNumberEveryoneServer) Recv() (*NumberEveryoneRequest, error) {
	m := new(NumberEveryoneRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalculatorService_SquareRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SquareRootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).SquareRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/SquareRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).SquareRoot(ctx, req.(*SquareRootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Calculate",
			Handler:    _CalculatorService_Calculate_Handler,
		},
		{
			MethodName: "SquareRoot",
			Handler:    _CalculatorService_SquareRoot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CalculateNumberDecomposition",
			Handler:       _CalculatorService_CalculateNumberDecomposition_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "AverageCalc",
			Handler:       _CalculatorService_AverageCalc_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "NumberEveryone",
			Handler:       _CalculatorService_NumberEveryone_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "calculator.proto",
}
